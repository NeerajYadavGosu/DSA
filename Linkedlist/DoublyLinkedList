import java.util.*;

class Node{
    int data ;
    Node next ;
    Node prev ;
    Node(int data){
        this.data = data ;
        this.nextv= null ;
        this.prev= null ;
    }
}
public static DoublyLinkedList{
    Node head ;
    Node tail ;
    Doublylinkedlist(){
        this.head = null ;
        this.tail = null ;

    }
    public static void main(String[] args ){
        Scanner sc = new Scanner ( System.in);
        DoublyLinkedlist dll = new DoublylinkedList();

    }
    void Print
}
class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class SinglyLinkedList {
    Node head;

    SinglyLinkedList() {
        this.head = null;
    }

    public void addEnd(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
        } else {
            Node temp = head;
            while (temp.next != null) {
                temp = temp.next;
            }
            temp.next = newNode;
        }
    }

    public void addFront(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
    }

    public void deleteNode(int key) {
        Node temp = head, prev = null;

        if (temp != null && temp.data == key) {
            head = temp.next;
            return;
        }

        while (temp != null && temp.data != key) {
            prev = temp;
            temp = temp.next;
        }

        if (temp == null) return;

        prev.next = temp.next;
    }

    public void display() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        SinglyLinkedList list = new SinglyLinkedList();

        // Add nodes to the list
        list.addEnd(10);
        list.addEnd(20);
        list.addFront(5);

        // Display the list
        list.display();  // Output: 5 10 20

        // Delete a node
        list.deleteNode(10);

        // Display the list again
        list.display();  // Output: 5 20
    }
}
